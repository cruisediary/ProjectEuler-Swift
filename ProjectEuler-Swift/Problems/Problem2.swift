//
//  Problem2.swift
//  ProjectEuler-Swift
//
//  Created by CruzDiary on 10/10/2016.
//  Copyright Â© 2016 swiftycruz. All rights reserved.
//
//  Even Fibonacci numbers
//
//  Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
//  1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
//  By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.


import Foundation

class Problem2: Problem {
    
    var name: String = "Problem2"
    
    struct State {
        var value: (Int, Int)
        
        func next() -> State {
            return State(value: (value.1, value.0 + value.1))
        }
        
        func sum() -> Int {
            return value.1
        }
    }
    
    func answer(input: Int) -> Int {
        //below input
        var state: State = State(value: (1, 2))
        var sum: Int = 0
        while state.sum() < input {
            sum += state.sum()
            state = state.next().next().next() // 2 -> ? -> ? -> 8 -> ? -> ? -> 34 <= (3n + 1)
        }
        return sum
    }
}
